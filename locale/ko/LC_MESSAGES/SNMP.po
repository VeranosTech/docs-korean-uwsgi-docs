# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012-2016, uWSGI
# This file is distributed under the same license as the uWSGI package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: uWSGI 2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-09 10:15+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../SNMP.rst:2
msgid "The embedded SNMP server"
msgstr ""

#: ../../SNMP.rst:4
msgid ""
"The uWSGI server embeds a tiny SNMP server that you can use to integrate "
"your web apps with your monitoring infrastructure."
msgstr ""

#: ../../SNMP.rst:6
msgid ""
"To enable SNMP support, you must run the uWSGI UDP server and choose a "
"SNMP community string (which is the rudimentary authentication system "
"used by SNMP)."
msgstr ""

#: ../../SNMP.rst:14
msgid ""
"This will run the uWSGI server on TCP port 3031 and UDP port 2222 with "
"SNMP enabled with \"foo\" as the community string."
msgstr ""

#: ../../SNMP.rst:16
msgid ""
"Please note that the SNMP server is started in the master process after "
"dropping the privileges. If you want it to listen on a privileged port, "
"you can either use :doc:`Capabilities<Capabilities>` on Linux, or use the"
" ``master-as-root`` option to run the master process as root. The "
":file:`staticfilesnmp.py` file is included in the distribution and is a "
"simple app that exports a counter via SNMP."
msgstr ""

#: ../../SNMP.rst:18
msgid "The uWSGI SNMP server exports 2 group of information:"
msgstr ""

#: ../../SNMP.rst:20
msgid ""
"General information is managed by the uWSGI server itself. The base OID "
"to access uWSGI SNMP information is ``1.3.6.1.4.1.35156.17`` "
"(``iso.org.dod.internet.private.enterprise.unbit.uwsgi``). General "
"options are mapped to ``1.3.6.1.4.1.35156.17.1.x``."
msgstr ""

#: ../../SNMP.rst:21
msgid ""
"Custom information is managed by the apps and accessed via "
"``1.3.6.1.4.1.35156.17.2.x``"
msgstr ""

#: ../../SNMP.rst:23
msgid ""
"So, to get the number of requests managed by the uWSGI server, you could "
"do"
msgstr ""

#: ../../SNMP.rst:30
msgid "Exporting custom values"
msgstr ""

#: ../../SNMP.rst:32
msgid "To manage custom values from your app you have these Python functions,"
msgstr ""

#: ../../SNMP.rst:34
msgid ":py:func:`uwsgi.snmp_set_counter32`"
msgstr ""

#: ../../SNMP.rst:35
msgid ":py:func:`uwsgi.snmp_set_counter64`"
msgstr ""

#: ../../SNMP.rst:36
msgid ":py:func:`uwsgi.snmp_set_gauge`"
msgstr ""

#: ../../SNMP.rst:37
msgid ":py:func:`uwsgi.snmp_incr_counter32`"
msgstr ""

#: ../../SNMP.rst:38
msgid ":py:func:`uwsgi.snmp_incr_counter64`"
msgstr ""

#: ../../SNMP.rst:39
msgid ":py:func:`uwsgi.snmp_incr_gauge`"
msgstr ""

#: ../../SNMP.rst:40
msgid ":py:func:`uwsgi.snmp_decr_counter32`"
msgstr ""

#: ../../SNMP.rst:41
msgid ":py:func:`uwsgi.snmp_decr_counter64`"
msgstr ""

#: ../../SNMP.rst:42
msgid ":py:func:`uwsgi.snmp_decr_gauge`"
msgstr ""

#: ../../SNMP.rst:44
msgid ""
"So if you wanted to export the number of users currently logged in (this "
"is a gauge as it can lower) as custom OID 40, you'd call"
msgstr ""

#: ../../SNMP.rst:51
msgid "and to look it up,"
msgstr ""

#: ../../SNMP.rst:57
msgid ""
"The system snmp daemon (net-snmp) can be configured to proxy SNMP "
"requests to uwsgi. This allows you to run the system daemon and uwsgi at "
"the same time, and runs all SNMP requests through the system daemon "
"first. To configure the system snmp daemon (net-snmp) to proxy "
"connections to uwsgi, add these lines to the bottom of "
"/etc/snmp/snmpd.conf and restart the daemon:"
msgstr ""

#: ../../SNMP.rst:64
msgid "Replace 'foo' and '2222' with the community and port configured in uwsgi."
msgstr ""

