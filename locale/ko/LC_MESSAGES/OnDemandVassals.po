# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012-2016, uWSGI
# This file is distributed under the same license as the uWSGI package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: uWSGI 2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-09 10:15+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../OnDemandVassals.rst:2
msgid "On demand vassals (socket activation)"
msgstr ""

#: ../../OnDemandVassals.rst:4
msgid ""
"Inspired by the venerable xinetd/inetd approach, you can spawn your "
"vassals only after the first connection to a specific socket. This "
"feature is available as of 1.9.1. Combined with –idle/–die-on-idle "
"options, you can have truly on-demand applications."
msgstr ""

#: ../../OnDemandVassals.rst:9
msgid ""
"When on demand is active for particular vassal, emperor won't spawn it on"
" start (or when it's config changes), but it will rather create socket "
"for that vassal and monitor if anything connects to it."
msgstr ""

#: ../../OnDemandVassals.rst:13
msgid ""
"At the first connection, the vassal is spawned and the socket passed as "
"the file descriptor 0. File descriptor 0 is always checked by uWSGI so "
"you do not need to specify a --socket option in the vassal file. This "
"works automagically for uwsgi sockets, if you use other protocols (like "
"http or fastcgi) you have to specify it with the --protocol option"
msgstr ""

#: ../../OnDemandVassals.rst:21
msgid ""
"If you will define in your vassal config same socket as used by emperor "
"for on demand action, vassal will override that socket file. That could "
"lead to unexpected behaviour, for example on demand activation of that "
"vassal will work only once."
msgstr ""

#: ../../OnDemandVassals.rst:27
msgid "On demand vassals with filesystem-based imperial monitors"
msgstr ""

#: ../../OnDemandVassals.rst:29
msgid ""
"For filesystem-based imperial monitors, such as ``dir://`` or "
"``glob://``, defining on demand vassals involves defining one of three "
"additional settings for your emperor:"
msgstr ""

#: ../../OnDemandVassals.rst:34
msgid "--emperor-on-demand-extension <ext>"
msgstr ""

#: ../../OnDemandVassals.rst:36
msgid ""
"this will instruct the Emperor to check for a file named <vassal>+<ext>, "
"if the file is available it will be read and its content used as the "
"socket to wait for:"
msgstr ""

#: ../../OnDemandVassals.rst:44
msgid ""
"supposing a myapp.ini file in /etc/uwsgi/vassals, a "
"/etc/uwsgi/vassals/myapp.ini.socket will be searched for (and its content"
" used as the socket name). Note that myapp.ini.socket isn't a socket! "
"This file only contains path for actual socket (tcp or unix)."
msgstr ""

#: ../../OnDemandVassals.rst:50
msgid "--emperor-on-demand-directory <dir>"
msgstr ""

#: ../../OnDemandVassals.rst:52
msgid ""
"This is a less-versatile approach supporting only UNIX sockets. Basically"
" the name (without extension and path) of the vassal is appended to the "
"specified directory + the .socket extension and used as the on-demand "
"socket:"
msgstr ""

#: ../../OnDemandVassals.rst:60
msgid ""
"using the previous example, the socket /var/tmp/myapp.socket will be "
"automatically bound."
msgstr ""

#: ../../OnDemandVassals.rst:64
msgid "--emperor-on-demand-exec <cmd>"
msgstr ""

#: ../../OnDemandVassals.rst:66
msgid ""
"This is most flexible solution for defining socket for on demand action "
"and (very probably) you will use it in very big deployments. Every time a"
" new vassal is added the supplied command is run passing full path to "
"vassal config file as the first argument. The STDOUT of the command is "
"used as the socket name."
msgstr ""

#: ../../OnDemandVassals.rst:72
msgid "Using on demand vassals with other imperial monitors"
msgstr ""

#: ../../OnDemandVassals.rst:74
msgid ""
"For some imperial monitors, such as ``pg://``, ``mongodb://``, ``zmq://``"
" socket for on demand activation is returned by imperial monitor by "
"itself. For example for ``pg://`` if executed on database query returns "
"more than 5 fields, 6th field will be used as socket for on demand "
"activation. Check :doc:`ImperialMonitors` for more information."
msgstr ""

#: ../../OnDemandVassals.rst:80
msgid ""
"For some imperial monitors, such as ``amqp://``, socket activation is not"
" possible yet."
msgstr ""

#: ../../OnDemandVassals.rst:84
msgid "Combining on demand vassals with ``--idle`` and ``--die-on-idle``"
msgstr ""

#: ../../OnDemandVassals.rst:86
msgid ""
"For truly on demand applications, you can add to each vassal ``--idle`` "
"and ``--die-on-idle`` options. This will allow suspend or completely turn"
" off applications that are no longer requested. ``--idle`` without "
"``--die-on-idle`` will work pretty much like without emperor, but adding "
"``--die-on-idle`` will give you superpower for completely shutting down "
"applications and returning back to on-demand mode."
msgstr ""

#: ../../OnDemandVassals.rst:93
msgid ""
"Emperor will simply put vassal back to on-demand mode when it dies "
"gracefully and turn it back on when there are any requests waiting or "
"socket."
msgstr ""

#: ../../OnDemandVassals.rst:98
msgid ""
"As mentioned before, you should **never** put in your vassal config file "
"socket that was passed to emperor for on-demand mode. For unix sockets, "
"file path that socket lives on will be rewritten with new socket, but old"
" socket will be still connected to your emperor. Emperor will listen for "
"connections on that old socket, but all requests will arrive to new one. "
"That means, if your vassal will be shut down because of idle state, it "
"will be **never** put back on (emperor won't receive any connections for "
"on-demand socket)."
msgstr ""

#: ../../OnDemandVassals.rst:107
msgid "For tcp socket, that can cause each request to be handled **twice**."
msgstr ""

